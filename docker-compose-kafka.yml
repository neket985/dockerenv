version: '3.7'

services:
  zookeeper:
    image: bitnami/zookeeper:3.8.1
    hostname: zookeeper
    environment:
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka:
    image: bitnami/kafka:3.4.0
    hostname: kafka
    links:
      - zookeeper
    ports:
      - 9092:9092
      - 9093:9093
    volumes:
      - "./kafka_data:/bitnami"
    environment:
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_CFG_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_LOG_RETENTION_BYTES: 10_000_000_000
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LISTENERS: CLIENT://:9092,EXTERNAL://:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: CLIENT://kafka:9092,EXTERNAL://localhost:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      KAFKA_CFG_CREATE_TOPICS_ENABLE: 'yes'

      KAFKA_HEAP_OPTS: -Xms1024m -Xmx2048m
      KAFKA_CFG_SOCKET_REQUEST_MAX_BYTES: 531860000

      KAFKA_CFG_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      BITNAMI_DEBUG: true
      KAFKA_ENABLE_KRAFT: false #todo почему kraft теперь всегда включен и что это?

  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - 9002:8080
    restart: always
    env_file:
      - .env
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    volumes:
      - '${JKS_CONTAINER:-./}:/opt/jks/'
#  kafka-console-producer.sh --broker-list kafka:9092 --topic umd-test --producer-property max.request.size=144236402 < /bitnami/sample_oneline.json